{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\i built react\\\\one-stash\\\\src\\\\components\\\\authRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { callApi, apiConfigs } from '../adapter/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthRoute = ({\n  component: Component\n}, ...rest) => {\n  _s();\n\n  const [approved, setApproved] = useState(true);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function req() {\n      if (localStorage.user) {\n        let user = JSON.parse(localStorage.user);\n        const res = await callApi('post', apiConfigs.apiUrl + 'user/validatetoken.php', user);\n\n        if (res.status === 200) {\n          setApproved(true);\n          setLoading(false);\n        } else {\n          setApproved(false);\n          setLoading(false);\n        }\n      } else {\n        setApproved(false);\n        setLoading(false);\n      }\n    }\n\n    req();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (approved === false && loading === false) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/onboard/sign-in\",\n            state: props.location\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 24\n        }, this);\n      } else if (approved === true && loading === false) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }, this);\n      } else {\n        return '';\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthRoute, \"OpqFMHh1AfxUA+1MKhjHA139RcE=\");\n\n_c = AuthRoute;\nexport default AuthRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRoute\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/i built react/one-stash/src/components/authRoute.js"],"names":["React","useEffect","useState","Route","Redirect","callApi","apiConfigs","AuthRoute","component","Component","rest","approved","setApproved","loading","setLoading","req","localStorage","user","JSON","parse","res","apiUrl","status","props","pathname","state","location"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,mBAApC;;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC;AAAZ,CAAD,EAAyB,GAAGC,IAA5B,KAAqC;AAAA;;AACnD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAec,GAAf,GAAqB;AACnB,UAAGC,YAAY,CAACC,IAAhB,EAAqB;AACjB,YAAIA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,IAAxB,CAAX;AACA,cAAMG,GAAG,GAAG,MAAMf,OAAO,CAAC,MAAD,EAASC,UAAU,CAACe,MAAX,GAAkB,wBAA3B,EAAqDJ,IAArD,CAAzB;;AACA,YAAGG,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBV,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH,SAHD,MAII;AACAF,UAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,OAXD,MAYI;AACAF,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACF;;AACDC,IAAAA,GAAG;AACJ,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACI,QAAC,KAAD,OAAWL,IAAX;AAAiB,IAAA,MAAM,EAAIa,KAAD,IAAW;AACjC,UAAGZ,QAAQ,KAAG,KAAX,IAAoBE,OAAO,KAAG,KAAjC,EAAuC;AACnC,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AACjBW,YAAAA,QAAQ,EAAE,kBADO;AAEjBC,YAAAA,KAAK,EAAEF,KAAK,CAACG;AAFI;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AAIH,OALD,MAMK,IAAGf,QAAQ,KAAG,IAAX,IAAmBE,OAAO,KAAG,KAAhC,EAAsC;AACvC,4BAAO,QAAC,SAAD,OAAeU;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFI,MAGD;AACA,eAAO,EAAP;AACH;AACJ;AAbD;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA1CD;;GAAMhB,S;;KAAAA,S;AA4CN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { callApi, apiConfigs } from '../adapter/common'\r\n\r\n\r\nconst AuthRoute = ({component: Component}, ...rest) => {\r\n    const [approved, setApproved] = useState(true)\r\n    const [loading, setLoading] = useState(true)\r\n  \r\n    useEffect(() => {\r\n      async function req() {\r\n        if(localStorage.user){\r\n            let user = JSON.parse(localStorage.user)\r\n            const res = await callApi('post', apiConfigs.apiUrl+'user/validatetoken.php', user)\r\n            if(res.status === 200){\r\n                setApproved(true)\r\n                setLoading(false)\r\n            }\r\n            else{\r\n                setApproved(false)\r\n                setLoading(false)\r\n            }\r\n        }\r\n        else{\r\n            setApproved(false)\r\n            setLoading(false)\r\n        }\r\n      }\r\n      req()\r\n    }, []);\r\n\r\n    return (\r\n        <Route {...rest} render= {(props) => {\r\n            if(approved===false && loading===false){\r\n                return <Redirect to={{\r\n                    pathname: \"/onboard/sign-in\",\r\n                    state: props.location\r\n                }}/>\r\n            } \r\n            else if(approved===true && loading===false){\r\n                return <Component {...props}/>\r\n            }\r\n            else{\r\n                return ''\r\n            }\r\n        }} />\r\n    )\r\n}\r\n\r\nexport default AuthRoute\r\n"]},"metadata":{},"sourceType":"module"}