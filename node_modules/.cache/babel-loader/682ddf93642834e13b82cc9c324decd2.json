{"ast":null,"code":"import { SIGN_UP, SIGN_IN, SET_LOADING, AUTH_LOG_ERROR, CLEAR_AUTH_DATA, AUTH_PERSONAL_DETAILS, AUTH_PROJECTS, AUTH_EDUCATIONS, AUTH_WORK, AUTH_SKILLS, CLEAR_MSG, CLOSE_ALERT, SET_ALERT_MSG } from './types';\nimport axios from 'axios';\nimport { remote } from '../config';\nexport const registerUser = (userData, reset) => async dispatch => {\n  setLoading();\n  const options = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  try {\n    setLoading();\n    const res = await axios.post(`${remote.signUp}`, userData, options);\n\n    if (res.data.errors !== undefined) {\n      dispatch({\n        type: AUTH_LOG_ERROR,\n        payload: res.data.msg\n      });\n    } else {\n      //status success\n      // clear the form field\n      reset();\n      dispatch({\n        type: SIGN_UP,\n        payload: res.data\n      });\n    }\n  } catch (error) {\n    //alert()\n    dispatch({\n      type: AUTH_LOG_ERROR,\n      payload: error.response === undefined ? 'Network' : error.response.data.errors === undefined ? error.response.data.message : error.response.data.errors\n    });\n  }\n};\nexport const verifyEmail = (verifyData, reset) => async dispatch => {\n  const options = {\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`${remote.activateAcc}`, verifyData, options);\n\n    if (res.status === 200) {\n      if (res.data.status === 'error') {\n        dispatch({\n          type: AUTH_LOG_ERROR,\n          payload: res.data.message\n        });\n      } else {\n        reset();\n        dispatch({\n          type: SIGN_UP,\n          payload: res.data\n        });\n      }\n    }\n  } catch (error) {\n    dispatch({\n      type: AUTH_LOG_ERROR,\n      payload: error.response === undefined ? 'Network' : error.response.data.errors === undefined ? error.response.data.message : error.response.data.errors\n    });\n  }\n};\nexport const loginUser = (userData, reset) => async dispatch => {\n  setLoading();\n  const options = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  try {\n    setLoading();\n    const res = await axios.post(`${remote.signIn}`, userData, options);\n\n    if (res.data.status === 'error') {\n      dispatch({\n        type: AUTH_LOG_ERROR,\n        payload: res.data.message\n      });\n    } else {\n      // clear the form field\n      reset();\n      dispatch({\n        type: SIGN_IN,\n        payload: res.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: AUTH_LOG_ERROR,\n      //payload: error.message,\n      payload: 'Error in connection. Please Try Again'\n    });\n  }\n}; // ::::::::::::::::::::::::\n// Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n}; // Set loading to true\n\nexport const clearData = () => {\n  return {\n    type: CLEAR_AUTH_DATA\n  };\n}; //\n\nexport const clearMsg = () => {\n  return {\n    type: CLEAR_MSG\n  };\n}; //\n\nexport const closeAlert = () => {\n  return {\n    type: CLOSE_ALERT\n  };\n}; //\n\nexport const setModal = (actionType, data) => {\n  return {\n    type: actionType,\n    payload: data\n  };\n}; //\n\nexport const setDelData = (actionType, data) => {\n  return {\n    type: actionType,\n    payload: data\n  };\n};\nexport const setToastMsg = data => {\n  return {\n    type: SET_ALERT_MSG,\n    payload: data\n  };\n}; // ! :::::::::::::::::::::::::::::::::::::::::::::::::::\n\nexport const getRequestWithToken = (token, url, actionType) => async dispatch => {\n  const options = {\n    headers: {\n      'Content-type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }; //\n\n  dispatch({\n    type: SET_LOADING\n  });\n\n  try {\n    const res = await axios.get(`${url}`, options);\n\n    if (res.status === 200) {\n      dispatch({\n        type: actionType,\n        payload: res.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: AUTH_LOG_ERROR,\n      payload: error.response === undefined ? 'Network Error' : error.response.data.errors === undefined ? error.response.data.message : error.response.data.errors\n    });\n  }\n};\n/**\r\n *\r\n * @param {*} token\r\n * @param {*} url\r\n * @param {*} actionType\r\n * @param {*} postData\r\n * @param {*} reset\r\n * @returns\r\n */\n\nexport const postRequest = (token, url, actionType, postData, reset) => async dispatch => {\n  const options = {\n    headers: {\n      'Content-type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }; //\n\n  dispatch({\n    type: SET_LOADING\n  });\n\n  try {\n    const res = await axios.post(`${url}`, postData, options);\n\n    if (res.status === 200) {\n      reset && reset();\n      dispatch({\n        type: actionType,\n        payload: res.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: AUTH_LOG_ERROR,\n      payload: error.response === undefined ? 'Network Error' : error.response.data.errors === undefined ? error.response.data.message : error.response.data.errors\n    });\n  }\n};\nexport const postRequestWithoutToken = (url, actionType, postData, reset) => async dispatch => {\n  const options = {\n    headers: {\n      'Content-type': 'application/json',\n      Accept: 'application/json'\n    }\n  }; //\n\n  dispatch({\n    type: SET_LOADING\n  });\n\n  try {\n    const res = await axios.post(`${url}`, postData, options);\n\n    if (res.status === 200) {\n      reset && reset();\n      dispatch({\n        type: actionType,\n        payload: res.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: AUTH_LOG_ERROR,\n      payload: error.response === undefined ? 'Network Error' : error.response.data.errors === undefined ? error.response.data.message : error.response.data.errors\n    });\n  }\n};\nexport const postRequestWithoutReset = (token, url, actionType, postData) => async dispatch => {\n  const options = {\n    headers: {\n      'Content-type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }; //\n\n  dispatch({\n    type: SET_LOADING\n  });\n\n  try {\n    const res = await axios.post(`${url}`, postData, options);\n\n    if (res.status === 200) {\n      dispatch({\n        type: actionType,\n        payload: res.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: AUTH_LOG_ERROR,\n      payload: error.response === undefined ? 'Network Error' : error.response.data.errors === undefined ? error.response.data.message : error.response.data.errors\n    });\n  }\n};\n/**\r\n *\r\n * @param {*string} token\r\n * @param {*url} url\r\n * @param {*action} actionType\r\n * @param {*object} postData\r\n * @param {*func} reset\r\n * @returns\r\n */\n\nexport const postWithFileReq = (token, url, actionType, postData, reset) => async dispatch => {\n  const options = {\n    headers: {\n      'Content-type': 'multipart/form-data',\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  };\n  dispatch({\n    type: SET_LOADING\n  });\n\n  try {\n    const res = await axios.post(`${url}`, postData, options);\n\n    if (res.status === 200) {\n      reset();\n      dispatch({\n        type: actionType,\n        payload: res.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: AUTH_LOG_ERROR,\n      payload: error.response === undefined ? 'Network Error' : error.response.data.errors === undefined ? error.response.data.message : error.response.data.errors\n    });\n  }\n}; // put\n\nexport const putWithFileReq = (token, url, actionType, postData) => async dispatch => {\n  const options = {\n    headers: {\n      'Content-type': 'multipart/form-data',\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  };\n  dispatch({\n    type: SET_LOADING\n  });\n\n  try {\n    const res = await axios.put(`${url}`, postData, options);\n\n    if (res.status === 200) {\n      dispatch({\n        type: actionType,\n        payload: res.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: AUTH_LOG_ERROR,\n      payload: error.response === undefined ? 'Network Error' : error.response.data.errors === undefined ? error.response.data.message : error.response.data.errors\n    });\n  }\n}; // delete\n\nexport const deleteRequest = (token, url, actionType) => async dispatch => {\n  const options = {\n    headers: {\n      Accept: 'application/josn',\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  };\n  dispatch({\n    type: SET_LOADING\n  });\n\n  try {\n    const res = await axios.delete(`${url}`, options);\n\n    if (res.status === 200) {\n      dispatch({\n        type: actionType,\n        payload: res.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: AUTH_LOG_ERROR,\n      payload: error.response === undefined ? 'Network Error' : error.response.data.errors === undefined ? error.response.data.message : error.response.data.errors\n    });\n  }\n}; //\n\n/*\r\nexport const newProject = (projectData, token, reset) => async (dispatch) => {\r\n\tconst options = {\r\n\t\theaders: {\r\n\t\t\t'Content-type': 'multipart/form-data',\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t}\r\n\ttry {\r\n\t\tconst res = await axios.post(`${remote.project}`, projectData, options)\r\n\t\t//\r\n\t\tif (res.data.errors !== undefined) {\r\n\t\t\t// there is an error\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload: res.data.msg,\r\n\t\t\t})\r\n\t\t} else if (res.data.status === 'success') {\r\n\t\t\t// clear the form field\r\n\t\t\treset()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_PROJECTS,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t//payload: error.message,\r\n\t\t\tpayload: 'Error in connection. Please Try Again',\r\n\t\t})\r\n\t}\r\n}\r\n// \r\nexport const updatePersonalDetails = (userData, token) => async (dispatch) => {\r\n\tsetLoading()\r\n\tconst options = {\r\n\t\theaders: {\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t}\r\n\ttry {\r\n\t\tsetLoading()\r\n\t\tconst res = await axios.post(`${remote.editProfile}`, userData, options)\r\n\t\t//alert(res.data.success)\r\n\t\tif (res.data.errors !== undefined) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload: res.data.errors,\r\n\t\t\t})\r\n\t\t} else if (res.data.status === 'success') {\r\n\t\t\t// clear the form field\r\n\t\t\t//reset()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_PERSONAL_DETAILS,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response === undefined\r\n\t\t\t\t\t? 'Network'\r\n\t\t\t\t\t: error.response.data.errors === undefined\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.response.data.errors,\r\n\t\t})\r\n\t}\r\n}\r\n// \r\nexport const newSkill = (skillData, token, reset) => async (dispatch) => {\r\n\tconst options = {\r\n\t\theaders: {\r\n\t\t\t'Content-type': 'multipart/form-data',\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t}\r\n\ttry {\r\n\t\tconst res = await axios.post(`${remote.skill}`, skillData, options)\r\n\t\t//\r\n\t\tif (res.data.errors !== undefined) {\r\n\t\t\t// there is an error\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload: res.data.msg,\r\n\t\t\t})\r\n\t\t} else if (res.data.status === 'success') {\r\n\t\t\t// clear the form field\r\n\t\t\treset()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_SKILLS,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t//payload: error.message,\r\n\t\t\tpayload: 'Error in connection. Please Try Again',\r\n\t\t})\r\n\t}\r\n}\r\n// add education\r\nexport const newEducation = (educationData, token, username, reset) => async (\r\n\tdispatch\r\n) => {\r\n\tsetLoading()\r\n\tconst options = {\r\n\t\theaders: {\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t}\r\n\ttry {\r\n\t\tsetLoading()\r\n\t\tconst res = await axios.post(`${remote.education}`, educationData, options)\r\n\t\t//\r\n\t\tif (res.data.errors !== undefined) {\r\n\t\t\t// there is an error\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload: res.data.msg,\r\n\t\t\t})\r\n\t\t} else if (res.data.status === 'success') {\r\n\t\t\t// clear the form field\r\n\t\t\treset()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_EDUCATIONS,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t//payload: error.message,\r\n\t\t\tpayload: 'Error in connection. Please Try Again',\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/USER/Desktop/i built react/one-stash/src/actions/authActions.js"],"names":["SIGN_UP","SIGN_IN","SET_LOADING","AUTH_LOG_ERROR","CLEAR_AUTH_DATA","AUTH_PERSONAL_DETAILS","AUTH_PROJECTS","AUTH_EDUCATIONS","AUTH_WORK","AUTH_SKILLS","CLEAR_MSG","CLOSE_ALERT","SET_ALERT_MSG","axios","remote","registerUser","userData","reset","dispatch","setLoading","options","headers","res","post","signUp","data","errors","undefined","type","payload","msg","error","response","message","verifyEmail","verifyData","Accept","activateAcc","status","loginUser","signIn","clearData","clearMsg","closeAlert","setModal","actionType","setDelData","setToastMsg","getRequestWithToken","token","url","Authorization","get","postRequest","postData","postRequestWithoutToken","postRequestWithoutReset","postWithFileReq","putWithFileReq","put","deleteRequest","delete"],"mappings":"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":["import {\r\n\tSIGN_UP,\r\n\tSIGN_IN,\r\n\tSET_LOADING,\r\n\tAUTH_LOG_ERROR,\r\n\tCLEAR_AUTH_DATA,\r\n\tAUTH_PERSONAL_DETAILS,\r\n\tAUTH_PROJECTS,\r\n\tAUTH_EDUCATIONS,\r\n\tAUTH_WORK,\r\n\tAUTH_SKILLS,\r\n\tCLEAR_MSG,\r\n\tCLOSE_ALERT,\r\n\tSET_ALERT_MSG,\r\n} from './types'\r\nimport axios from 'axios'\r\nimport { remote } from '../config'\r\nexport const registerUser = (userData, reset) => async (dispatch) => {\r\n\tsetLoading()\r\n\tconst options = {\r\n\t\theaders: {\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t},\r\n\t}\r\n\ttry {\r\n\t\tsetLoading()\r\n\t\tconst res = await axios.post(`${remote.signUp}`, userData, options)\r\n\r\n\t\tif (res.data.errors !== undefined) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload: res.data.msg,\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\t//status success\r\n\t\t\t// clear the form field\r\n\t\t\treset()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: SIGN_UP,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t//alert()\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response === undefined\r\n\t\t\t\t\t? 'Network'\r\n\t\t\t\t\t: error.response.data.errors === undefined\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.response.data.errors,\r\n\t\t})\r\n\t}\r\n}\r\nexport const verifyEmail = (verifyData, reset) => async (dispatch) => {\r\n\tconst options = {\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t},\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst res = await axios.post(`${remote.activateAcc}`, verifyData, options)\r\n\r\n\t\tif (res.status === 200) {\r\n\t\t\tif (res.data.status === 'error') {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\t\tpayload: res.data.message,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\treset()\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: SIGN_UP,\r\n\t\t\t\t\tpayload: res.data,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response === undefined\r\n\t\t\t\t\t? 'Network'\r\n\t\t\t\t\t: error.response.data.errors === undefined\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.response.data.errors,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const loginUser = (userData, reset) => async (dispatch) => {\r\n\tsetLoading()\r\n\tconst options = {\r\n\t\theaders: {\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t},\r\n\t}\r\n\ttry {\r\n\t\tsetLoading()\r\n\t\tconst res = await axios.post(`${remote.signIn}`, userData, options)\r\n\r\n\t\tif (res.data.status === 'error') {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload: res.data.message,\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\t// clear the form field\r\n\t\t\treset()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: SIGN_IN,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t//payload: error.message,\r\n\t\t\tpayload: 'Error in connection. Please Try Again',\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\n\r\n// ::::::::::::::::::::::::\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n\treturn {\r\n\t\ttype: SET_LOADING,\r\n\t}\r\n}\r\n// Set loading to true\r\nexport const clearData = () => {\r\n\treturn {\r\n\t\ttype: CLEAR_AUTH_DATA,\r\n\t}\r\n}\r\n//\r\nexport const clearMsg = () => {\r\n\treturn {\r\n\t\ttype: CLEAR_MSG,\r\n\t}\r\n}\r\n//\r\nexport const closeAlert = () => {\r\n\treturn {\r\n\t\ttype: CLOSE_ALERT,\r\n\t}\r\n}\r\n//\r\nexport const setModal = (actionType, data) => {\r\n\treturn {\r\n\t\ttype: actionType,\r\n\t\tpayload: data,\r\n\t}\r\n}\r\n//\r\nexport const setDelData = (actionType, data) => {\r\n\treturn {\r\n\t\ttype: actionType,\r\n\t\tpayload: data,\r\n\t}\r\n}\r\nexport const setToastMsg = (data) => {\r\n\treturn {\r\n\t\ttype: SET_ALERT_MSG,\r\n\t\tpayload: data,\r\n\t}\r\n}\r\n\r\n// ! :::::::::::::::::::::::::::::::::::::::::::::::::::\r\nexport const getRequestWithToken =\r\n\t(token, url, actionType) => async (dispatch) => {\r\n\t\tconst options = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t},\r\n\t\t}\r\n\t\t//\r\n\t\tdispatch({\r\n\t\t\ttype: SET_LOADING,\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tconst res = await axios.get(`${url}`, options)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: actionType,\r\n\t\t\t\t\tpayload: res.data,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload:\r\n\t\t\t\t\terror.response === undefined\r\n\t\t\t\t\t\t? 'Network Error'\r\n\t\t\t\t\t\t: error.response.data.errors === undefined\r\n\t\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t\t: error.response.data.errors,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n/**\r\n *\r\n * @param {*} token\r\n * @param {*} url\r\n * @param {*} actionType\r\n * @param {*} postData\r\n * @param {*} reset\r\n * @returns\r\n */\r\nexport const postRequest =\r\n\t(token, url, actionType, postData, reset) => async (dispatch) => {\r\n\t\tconst options = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t},\r\n\t\t}\r\n\t\t//\r\n\t\tdispatch({\r\n\t\t\ttype: SET_LOADING,\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(`${url}`, postData, options)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\treset && reset()\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: actionType,\r\n\t\t\t\t\tpayload: res.data,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload:\r\n\t\t\t\t\terror.response === undefined\r\n\t\t\t\t\t\t? 'Network Error'\r\n\t\t\t\t\t\t: error.response.data.errors === undefined\r\n\t\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t\t: error.response.data.errors,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\nexport const postRequestWithoutToken =\r\n\t(url, actionType, postData, reset) => async (dispatch) => {\r\n\t\tconst options = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t},\r\n\t\t}\r\n\t\t//\r\n\t\tdispatch({\r\n\t\t\ttype: SET_LOADING,\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(`${url}`, postData, options)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\treset && reset()\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: actionType,\r\n\t\t\t\t\tpayload: res.data,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload:\r\n\t\t\t\t\terror.response === undefined\r\n\t\t\t\t\t\t? 'Network Error'\r\n\t\t\t\t\t\t: error.response.data.errors === undefined\r\n\t\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t\t: error.response.data.errors,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\nexport const postRequestWithoutReset =\r\n\t(token, url, actionType, postData) => async (dispatch) => {\r\n\t\tconst options = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t},\r\n\t\t}\r\n\t\t//\r\n\t\tdispatch({\r\n\t\t\ttype: SET_LOADING,\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(`${url}`, postData, options)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: actionType,\r\n\t\t\t\t\tpayload: res.data,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload:\r\n\t\t\t\t\terror.response === undefined\r\n\t\t\t\t\t\t? 'Network Error'\r\n\t\t\t\t\t\t: error.response.data.errors === undefined\r\n\t\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t\t: error.response.data.errors,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n/**\r\n *\r\n * @param {*string} token\r\n * @param {*url} url\r\n * @param {*action} actionType\r\n * @param {*object} postData\r\n * @param {*func} reset\r\n * @returns\r\n */\r\nexport const postWithFileReq =\r\n\t(token, url, actionType, postData, reset) => async (dispatch) => {\r\n\t\tconst options = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'multipart/form-data',\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t},\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: SET_LOADING,\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(`${url}`, postData, options)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\treset()\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: actionType,\r\n\t\t\t\t\tpayload: res.data,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload:\r\n\t\t\t\t\terror.response === undefined\r\n\t\t\t\t\t\t? 'Network Error'\r\n\t\t\t\t\t\t: error.response.data.errors === undefined\r\n\t\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t\t: error.response.data.errors,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n// put\r\nexport const putWithFileReq =\r\n\t(token, url, actionType, postData) => async (dispatch) => {\r\n\t\tconst options = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'multipart/form-data',\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t},\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: SET_LOADING,\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tconst res = await axios.put(`${url}`, postData, options)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: actionType,\r\n\t\t\t\t\tpayload: res.data,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload:\r\n\t\t\t\t\terror.response === undefined\r\n\t\t\t\t\t\t? 'Network Error'\r\n\t\t\t\t\t\t: error.response.data.errors === undefined\r\n\t\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t\t: error.response.data.errors,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n// delete\r\nexport const deleteRequest = (token, url, actionType) => async (dispatch) => {\r\n\tconst options = {\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/josn',\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t}\r\n\tdispatch({\r\n\t\ttype: SET_LOADING,\r\n\t})\r\n\ttry {\r\n\t\tconst res = await axios.delete(`${url}`, options)\r\n\t\tif (res.status === 200) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: actionType,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response === undefined\r\n\t\t\t\t\t? 'Network Error'\r\n\t\t\t\t\t: error.response.data.errors === undefined\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.response.data.errors,\r\n\t\t})\r\n\t}\r\n}\r\n\r\n//\r\n/*\r\nexport const newProject = (projectData, token, reset) => async (dispatch) => {\r\n\tconst options = {\r\n\t\theaders: {\r\n\t\t\t'Content-type': 'multipart/form-data',\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t}\r\n\ttry {\r\n\t\tconst res = await axios.post(`${remote.project}`, projectData, options)\r\n\t\t//\r\n\t\tif (res.data.errors !== undefined) {\r\n\t\t\t// there is an error\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload: res.data.msg,\r\n\t\t\t})\r\n\t\t} else if (res.data.status === 'success') {\r\n\t\t\t// clear the form field\r\n\t\t\treset()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_PROJECTS,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t//payload: error.message,\r\n\t\t\tpayload: 'Error in connection. Please Try Again',\r\n\t\t})\r\n\t}\r\n}\r\n// \r\nexport const updatePersonalDetails = (userData, token) => async (dispatch) => {\r\n\tsetLoading()\r\n\tconst options = {\r\n\t\theaders: {\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t}\r\n\ttry {\r\n\t\tsetLoading()\r\n\t\tconst res = await axios.post(`${remote.editProfile}`, userData, options)\r\n\t\t//alert(res.data.success)\r\n\t\tif (res.data.errors !== undefined) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload: res.data.errors,\r\n\t\t\t})\r\n\t\t} else if (res.data.status === 'success') {\r\n\t\t\t// clear the form field\r\n\t\t\t//reset()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_PERSONAL_DETAILS,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response === undefined\r\n\t\t\t\t\t? 'Network'\r\n\t\t\t\t\t: error.response.data.errors === undefined\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.response.data.errors,\r\n\t\t})\r\n\t}\r\n}\r\n// \r\nexport const newSkill = (skillData, token, reset) => async (dispatch) => {\r\n\tconst options = {\r\n\t\theaders: {\r\n\t\t\t'Content-type': 'multipart/form-data',\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t}\r\n\ttry {\r\n\t\tconst res = await axios.post(`${remote.skill}`, skillData, options)\r\n\t\t//\r\n\t\tif (res.data.errors !== undefined) {\r\n\t\t\t// there is an error\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload: res.data.msg,\r\n\t\t\t})\r\n\t\t} else if (res.data.status === 'success') {\r\n\t\t\t// clear the form field\r\n\t\t\treset()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_SKILLS,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t//payload: error.message,\r\n\t\t\tpayload: 'Error in connection. Please Try Again',\r\n\t\t})\r\n\t}\r\n}\r\n// add education\r\nexport const newEducation = (educationData, token, username, reset) => async (\r\n\tdispatch\r\n) => {\r\n\tsetLoading()\r\n\tconst options = {\r\n\t\theaders: {\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t}\r\n\ttry {\r\n\t\tsetLoading()\r\n\t\tconst res = await axios.post(`${remote.education}`, educationData, options)\r\n\t\t//\r\n\t\tif (res.data.errors !== undefined) {\r\n\t\t\t// there is an error\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t\tpayload: res.data.msg,\r\n\t\t\t})\r\n\t\t} else if (res.data.status === 'success') {\r\n\t\t\t// clear the form field\r\n\t\t\treset()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AUTH_EDUCATIONS,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t})\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_LOG_ERROR,\r\n\t\t\t//payload: error.message,\r\n\t\t\tpayload: 'Error in connection. Please Try Again',\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}